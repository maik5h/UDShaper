The biggest and most noticeable TODOs of this project:

- Hosts only perform undo/ redo actions when the changed parameter is properly reported. Reporting parameters is not possible with the current setup and dynamic number of ShapePoints and linked parameters. A maximum number of parameters must be defined and all parameters would have to be preallocated.

- When modulated, parameters can move to negative x-values.

- Bug when adding the same Envelope to the same ModulatedParameter multiple times.

- Add function that assigns size and position to all elements depending on the plugin size and make window resizable.

- shapeSine is very buggy. Also add shapeArcsine.

- Audio processing is automatically parallelized by CLAP, which makes some of the planned functionality impossible. 1. deciding whether the current sample is higher of lower than the previous one is not possible for the first sample in every batch. I "solved" that by comparing the first sample with the second one, which is a very good approximation but not perfectly accurate. 2. I want to normalize the distortion segment wise to each local maximum of the wave but again, the nearest local maximum might be outside of the current batch. Is there a way to get the whole buffer as list while still having the parallelization working?

- All parameters depending on a ModulatedParameter are retrieved using a get-function which recalculates the parameter every time it is needed. This is probably more often than necessary. Can this be made more efficient?

- I use my own (unparallelized) functions to create GUI visuals. By only updating elements that have changed their appereance this is still fast enough (on my machine). using a graphics library would probably be better.

- When duplicating a plugin instance, the name of the copy is always UDShaper_10 for some reason. This does not seem to cause any harm, but should be adressed at some point.

- FL Studio destroys and reinitializes plugin when loading a preset, so the current implementation works fine. If other hosts do not destroy the plugin, i.e. just load the parameters into the existing instance, some methods might cause problems (EnvelopeManager::loadState assumes that the three default Envelopes are there and not more).

No functionality, only convenience:

- When editing curveCenter, the center should not be set to the mouse position, but rather move slower the further from the center it is, to allow for more control. Also detach the exact position on the screen from the power value to allow for finer steps in power.

- Symbols in shapeEditor windows to indicate mode (arrow up/down, L/R, M/S, +/-)
